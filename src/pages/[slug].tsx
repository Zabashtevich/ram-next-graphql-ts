import { GetStaticPropsResult } from "next";
import Head from "next/head";
import { useState, useEffect } from "react";
import { useDebouncedCallback } from "use-debounce/lib";

import { Search } from "../components";
import { HomePageProps, HomeRequestData } from "../interfaces/HomePage";
import graphqlClient from "../lib/graphql";
import { GET_HOME_CARDS } from "../request";

export default function Characters({ data, error }: HomePageProps) {
  const initialState = data?.characters;
  const [items, setItems] = useState([]);
  const [value, setValue] = useState("");

  const debounced = useDebouncedCallback((value) => {
    setValue(value);
  }, 1000);

  function searchHandler(e: React.ChangeEvent<HTMLInputElement>): void {
    debounced(e.target.value);
  }

  useEffect(() => {
    if (value) {
    }
  }, [value]);

  return (
    <>
      <Head>
        <title>RAM APP</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Search onChange={searchHandler} />
    </>
  );
}

export async function getServerSideProps(): Promise<
  GetStaticPropsResult<HomePageProps>
> {
  const { error, data } = await graphqlClient.query<HomeRequestData>({
    query: GET_HOME_CARDS,
  });

  if (error) {
    return {
      props: {
        error: true,
      },
    };
  } else {
    return {
      props: {
        data,
      },
    };
  }
}
